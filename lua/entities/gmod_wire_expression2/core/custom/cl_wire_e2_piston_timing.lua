local DSC = E2Helper.Descriptions
local tKey = {"an integer", "a string"}
DSC["putPistonAxis(e:n)"] = "Stores the base prop local-axis to use with the piston cross-product functions"
DSC["putPistonAxis(e:nn)"] = "Stores the base prop local-axis to use with the piston cross-product functions"
DSC["putPistonAxis(e:nnn)"] = "Stores the base prop local-axis to use with the piston cross-product functions"
DSC["putPistonAxis(e:r)"] = "Stores the base prop local-axis to use with the piston cross-product functions"
DSC["putPistonAxis(e:v)"] = "Stores the base prop local-axis to use with the piston cross-product functions"
DSC["putPistonAxis(e:xv2)"] = "Stores the base prop local-axis to use with the piston cross-product functions"
DSC["resPistonAxis(e:)"] = "Clears the base prop local-axis to use with the piston cross-product functions"
DSC["putPistonBase(e:e)"] = "Stores the base prop to use with the piston cross-product functions"
DSC["resPistonBase(e:)"] = "Clears the base prop to use with the piston cross-product functions"
DSC["getPistonBase(e:n)"] = "Returns the engine base entity by "..tKey[1].." key"
DSC["getPistonBase(e:s)"] = "Returns the engine base entity by "..tKey[2].." key"
DSC["getPistonAxis(e:n)"] = "Returns shaft rotation axis by "..tKey[1].." key"
DSC["getPistonAxis(e:s)"] = "Returns shaft rotation axis by "..tKey[2].." key"
DSC["allPiston(e:)"] = "Returns the count of all piston keys"
DSC["clrPiston(e:)"] = "Clears all pistons from the E2 chip"
DSC["cntPiston(e:)"] = "Returns the count of integer piston keys"
DSC["getPiston(e:nn)"] = "Returns piston bearing timing by "..tKey[1].." key"
DSC["getPiston(e:sn)"] = "Returns piston bearing timing by "..tKey[2].." key"
DSC["getPiston(e:nv)"] = "Returns piston vector timing by "..tKey[1].." key"
DSC["getPiston(e:sv)"] = "Returns piston vector timing by "..tKey[2].." key"
DSC["getPistonMax(e:n)"] = "Returns the piston number highest point parameter by "..tKey[1].." key"
DSC["getPistonMax(e:s)"] = "Returns the piston number highest point parameter by "..tKey[2].." key"
DSC["getPistonMin(e:n)"] = "Returns the piston number lowest point parameter by "..tKey[1].." key"
DSC["getPistonMin(e:s)"] = "Returns the piston number lowest point parameter by "..tKey[2].." key"
DSC["getPistonMaxX(e:n)"] = "Returns the piston vector highest point parameter by "..tKey[1].." key"
DSC["getPistonMaxX(e:s)"] = "Returns the piston vector highest point parameter by "..tKey[2].." key"
DSC["getPistonMinX(e:n)"] = "Returns the piston vector lowest point parameter by "..tKey[1].." key"
DSC["getPistonMinX(e:s)"] = "Returns the piston vector lowest point parameter by "..tKey[2].." key"
DSC["remPiston(e:n)"] = "Removes the piston by "..tKey[1].." key"
DSC["remPiston(e:s)"] = "Removes the piston by "..tKey[2].." key"
DSC["setPistonSign(e:nn)"] = "Creates a sign timed piston by "..tKey[1].." key and highest point angle in degrees"
DSC["setPistonSign(e:sn)"] = "Creates a sign timed piston by "..tKey[2].." key and highest point angle in degrees"
DSC["setPistonRamp(e:nn)"] = "Creates a triangular timed piston by "..tKey[1].." key and highest point angle in degrees"
DSC["setPistonRamp(e:sn)"] = "Creates a triangular timed piston by "..tKey[2].." key and highest point angle in degrees"
DSC["setPistonWave(e:nn)"] = "Creates a wave timed piston by "..tKey[1].." key and highest point angle in degrees"
DSC["setPistonWave(e:sn)"] = "Creates a wave timed piston by "..tKey[2].." key and highest point angle in degrees"
DSC["setPistonSignX(e:nv)"] = "Creates a cross-product timed piston with sign output by "..tKey[1].." key and highest point local vector"
DSC["setPistonSignX(e:sv)"] = "Creates a cross-product timed piston with sign output by "..tKey[2].." key and highest point local vector"
DSC["setPistonSignX(e:nvve)"] = "Creates a cross-product timed piston with sign output by "..tKey[1].." key and highest point local vector"
DSC["setPistonSignX(e:svve)"] = "Creates a cross-product timed piston with sign output by "..tKey[2].." key and highest point local vector"
DSC["setPistonWaveX(e:nv)"] = "Creates a cross-product timed piston with wave output by "..tKey[1].." key and highest point local vector"
DSC["setPistonWaveX(e:sv)"] = "Creates a cross-product timed piston with wave output by "..tKey[2].." key and highest point local vector"
DSC["setPistonWaveX(e:nvve)"] = "Creates a cross-product timed piston with wave output by "..tKey[1].." key and highest point local vector"
DSC["setPistonWaveX(e:svve)"] = "Creates a cross-product timed piston with wave output by "..tKey[2].." key and highest point local vector"
DSC["isPistonSign(e:n)"] = "Returns a flag if the piston is in sign mode by "..tKey[1].." key"
DSC["isPistonSign(e:s)"] = "Returns a flag if the piston is in sign mode by "..tKey[2].." key"
DSC["isPistonWave(e:n)"] = "Returns a flag if the piston is in wave mode by "..tKey[1].." key"
DSC["isPistonWave(e:s)"] = "Returns a flag if the piston is in wave mode by "..tKey[2].." key"
DSC["isPistonSignX(e:n)"] = "Returns a flag if the piston is in cross-product sign mode by "..tKey[1].." key"
DSC["isPistonSignX(e:s)"] = "Returns a flag if the piston is in cross-product sign mode by "..tKey[2].." key"
DSC["isPistonWaveX(e:n)"] = "Returns a flag if the piston is in cross-product wave mode by "..tKey[1].." key"
DSC["isPistonWaveX(e:s)"] = "Returns a flag if the piston is in cross-product wave mode by "..tKey[2].." key"
DSC["isPistonRamp(e:n)"] = "Returns a flag if the piston is in triangular mode by "..tKey[1].." key"
DSC["isPistonRamp(e:s)"] = "Returns a flag if the piston is in triangular mode by "..tKey[2].." key"
DSC["getPistonTopRoll(e:v)"] = "Returns the crankshaft roll direction vector relative to the engine base"
